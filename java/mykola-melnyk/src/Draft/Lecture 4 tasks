Coding tasks
Create a class Container that holds some value (choose any type) and an inner class ContainerUpdatesListener. The Container should accept a value during an object creation, and provide methods to get or set a value. The ContainerUpdatesListener should provide a single method hasValueChanged, that returns a boolean value. The method needs to return true if the value inside of the container has changed after the associated instance of the ContainerUpdatesListener class was created, and false - otherwise. (e.g., new Container -> new ContainerUpdatesListener -> hasValueChanged (false) -> container.setValue -> hasValueChanged(true))
Create a class that represents a binary search tree (https://en.wikipedia.org/wiki/Binary_search_tree). The tree should have a reference to the root node. Each node stores an integer value and has references to the left and right children nodes. The tree should also have a method that accepts a value and adds it to the tree.
Create a functional interface StringModifier with a method modify that accepts a string and returns a modified string. In the main class create a method that accepts a string value and a lambda expression, applies the lambda to the value and outputs the result. In the main method create two lambda expressions that implement the interface: one should convert all characters to the lower case, second - to the upper case. Both lambdas should prepend a prefix “modified: ” before the modified values (e.g., “test” -> “modified: TEST”). Call the defined method with some string value and both lambdas. Call the same method with two method references that just convert all characters to the lower and upper case.
Create an enum class that represents the following weight units: gram, kilogram, ounce, pound, ton. The class should provide methods to get an abbreviation for a unit (g, kg, oz, lb, t), convert a value from a source unit to a current one (method should accept a value and a source unit), and method that allows to get the enum value by a string representation, that can be passed in any case (e.g., for strings “gram”, “Gram”, “GRAM” the method should return an enum value for the gram unit).
Write a program that accepts two numbers and a symbol of an operation (as a character) and outputs the result of the selected operation. Possible characters for the operation: ‘+’, ‘-’, ‘*’, ‘/’, ‘%’. The program should work with decimal numbers of any length and precision.
Create a method that accepts a string, counts number of letters (assume only English lower and upper letters), digits, spaces and other characters and outputs this data:
Input: “aB?C de 42* dcd”
Output:
	“8 letters”
	“2 digits”
	“3 spaces”
	“2 other characters”
You can use static methods of the Character class to determine if a specific character is a letter or digit (https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/Character.html)
Create a method that accepts a string of digits and after each digit appends its string representation in parentheses
	Input: “12345”
Output: “1(one)2(two)3(three)4(four)5(five)”
